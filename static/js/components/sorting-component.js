class SortingComponent {
    constructor(container, onSortingChange, urlState) {
        this.container = container;
        this.onSortingChange = onSortingChange;
        this.urlState = urlState;
        this.currentSorting = {
            sort_order: 'price',
            sort_direction: 'ASC'
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    init() {
        this.restoreSortingFromURL();
        this.render();
    }

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ URL
     */
    restoreSortingFromURL() {
        this.currentSorting = {
            sort_order: this.urlState.getParam('sort_order', 'price'),
            sort_direction: this.urlState.getParam('sort_direction', 'ASC')
        };
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
     */
    render() {
        const fragment = document.createDocumentFragment();

        // –°–æ–∑–¥–∞–µ–º select –Ω–∞–ø—Ä—è–º—É—é —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å selected
        const select = document.createElement('select');
        select.className = 'form-select form-select-sm';
        select.id = 'sortingSelect';

        // –í–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        const sortOptions = [
            { value: 'price_ASC', label: 'üí∞ –¶–µ–Ω–∞ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)' },
            { value: 'price_DESC', label: 'üí∞ –¶–µ–Ω–∞ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)' },
            { value: 'year_DESC', label: 'üìÖ –ì–æ–¥ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)' },
            { value: 'year_ASC', label: 'üìÖ –ì–æ–¥ (—Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ)' },
            { value: 'mileage_ASC', label: 'üìè –ü—Ä–æ–±–µ–≥ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)' },
            { value: 'mileage_DESC', label: 'üìè –ü—Ä–æ–±–µ–≥ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)' },
            { value: 'car_id_DESC', label: 'üÜï –°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ' }
        ];

        // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è select
        const currentValue = `${this.currentSorting.sort_order}_${this.currentSorting.sort_direction}`;

        sortOptions.forEach(option => {
            const optionEl = document.createElement('option');
            optionEl.value = option.value;
            optionEl.textContent = option.label;
            
            // –ü—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º selected
            if (option.value === currentValue) {
                optionEl.selected = true;
            }
            
            select.appendChild(optionEl);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        select.addEventListener('change', (e) => {
            const [sort_order, sort_direction] = e.target.value.split('_');
            this.handleSortingChange({ sort_order, sort_direction });
        });

        fragment.appendChild(select);
        SafeDOM.render(this.container, fragment);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
     */
    handleSortingChange(sorting) {
        this.currentSorting = sorting;
        this.onSortingChange(sorting);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    updateSorting(sorting) {
        this.currentSorting = { ...sorting };
        this.render();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
     */
    getCurrentSorting() {
        return { ...this.currentSorting };
    }
}